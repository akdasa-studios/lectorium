{
  "folders": [
    {
      "name": "ðŸ’¾ Lectorium :: Data",
      "path": "./data"
    },
    {
      "name": "ðŸ’¨ Services :: Airflow",
      "path": "./modules/services/airflow"
    },
    {
      "name": "ðŸ“¦ Services :: Minio",
      "path": "./modules/services/minio"
    },
    {
      "name": "ðŸšª Services :: Gateway",
      "path": "./modules/services/gateway"
    },
    {
      "name": "ðŸšª Services :: Database",
      "path": "./modules/services/database"
    },
    {
      "name": "ðŸ”¨ Apps :: Admin",
      "path": "./modules/apps/admin"
    },
    {
      "name": "ðŸ‘‹ Apps :: Landing",
      "path": "./modules/apps/landing"
    },
    {
      "name": "ðŸ“œ Misc :: Scripts",
      "path": "./scripts"
    },
    {
      "name": "ðŸ“– Docs",
      "path": "./docs"
    }
  ],
  "tasks": {
    "version": "2.0.0",
    "tasks": [
      {
        "label": "ðŸš€ Airflow :: Run",
        "detail": "Run Airflow service",
        "command": "source ./.airflow/bin/activate.fish && airflow standalone",
        "type": "shell",
        "args": [],
        "presentation": {
          "reveal": "always"
        },
        "icon": {
          "id": "flame"
        },
        "problemMatcher": [],
        "group": "none",
        "isBackground": true,
        "options": {
          "cwd": "/workspaces/lectorium/modules/services/airflow",
          "env": {
            "AIRFLOW_HOME": "/workspaces/lectorium/data/airflow",
            "AIRFLOW__CORE__MP_START_METHOD": "spawn"
          }
        }
      },
      {
        "label": "ðŸš€ Minio :: Run",
        "detail": "Run Minio service",
        "command": "minio",
        "type": "shell",
        "args": [
          "server",
          "/workspaces/lectorium/data/minio/storage",
          "--console-address", "':9001'",
          "--certs-dir", "/workspaces/lectorium/data/minio/certs"
        ],
        "presentation": {
          "reveal": "always"
        },
        "icon": {
          "id": "flame"
        },
        "problemMatcher": [],
        "group": "none",
        "isBackground": true,
        "options": {
          "cwd": "/workspaces/lectorium/modules/services/airflow",
          "env": {
            "MINIO_ROOT_USER": "lectorium",
            "MINIO_ROOT_PASSWORD": "lectorium",
          }
        }
      },
      {
        "label": "ðŸš€ Gateway :: Run",
        "detail": "Run Gateway service",
        "command": "nginx",
        "type": "shell",
        "args": [
          "-c", "/workspaces/lectorium/modules/services/gateway/nginx.conf",
          "-g", "'daemon off;'"
        ],
        "presentation": {
          "reveal": "always"
        },
        "icon": {
          "id": "flame"
        },
        "problemMatcher": [],
        "group": "none",
        "isBackground": true,
        "options": {
          "cwd": "/workspaces/lectorium/modules/services/gateway",
        }
      },
      {
        "label": "ðŸš€ Postgres :: Run",
        "detail": "Run the database",
        "command": "sudo service postgresql start",
        "type": "shell",
        "args": [],
        "problemMatcher": [],
        "presentation": {
          "reveal": "always"
        },
        "icon": {
          "id": "flame"
        },
        "group": "none",
        "isBackground": true,
      },
      {
        "label": "ðŸš€ Run All",
        "dependsOn": [
          "ðŸš€ Postgres :: Run",
          "ðŸš€ Airflow :: Run",
          "ðŸš€ Gateway :: Run",
        ],
        "dependsOrder": "parallel"
      }
    ]
  },
  "launch": {
    "version": "0.2.0",
    "configurations": [],
    "compounds": []
  },
  "settings": {
    /* -------------------------------------------------------------------------- */
    /*                                   editor                                   */
    /* -------------------------------------------------------------------------- */
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false,
    "editor.codeActionsOnSave": {
      "source.fixAll": "explicit"
    },
    /* -------------------------------------------------------------------------- */
    /*                                   linter                                   */
    /* -------------------------------------------------------------------------- */
    "eslint.validate": [
      "javascript",
      "typescript",
      "vue"
    ],
    /* -------------------------------------------------------------------------- */
    /*                                    tests                                   */
    /* -------------------------------------------------------------------------- */
    "jest.enable": false,
    "jest.jestCommandLine": "npx jest",
    "jest.runMode": "on-demand",
    "jestrunner.jestCommand": "npx jest",
    /* -------------------------------------------------------------------------- */
    /*                                    Volar                                   */
    /* -------------------------------------------------------------------------- */
    "volar.takeOverMode.enabled": true,
    "vue.language-server.runtime": "node",
    /* -------------------------------------------------------------------------- */
    /*                                 file types                                 */
    /* -------------------------------------------------------------------------- */
    "[feature]": {
      "editor.formatOnType": true,
      "editor.formatOnSave": true,
    },
    "typescript.preferences.autoImportFileExcludePatterns": [
      "**/dist/**",
    ],
    /* -------------------------------------------------------------------------- */
    /*                                   github                                   */
    /* -------------------------------------------------------------------------- */
    "githubIssues.issueBranchTitle": "${user}/issue-${issueNumber}-${sanitizedIssueTitle}",
    /* -------------------------------------------------------------------------- */
    /*                                   search                                   */
    /* -------------------------------------------------------------------------- */
    "search.exclude": {
      "**/dist/**": true,
      "**/.airflow/**": true,
    },
    "files.exclude": {
      "**/.git": true,
      "**/.DS_Store": true,
      "**/Thumbs.db": true,
      "**/dist": true,
      "**/node_modules": true
    },
    "files.watcherExclude": {
      "**/.git/objects/**": true,
      "**/.git/subtree-cache/**": true,
      "**/.hg/store/**": true,
      "**/dist/**": true,
      "**/node_modules/**": true
    },
  },
}
