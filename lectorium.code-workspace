{
  "folders": [
    {
      "name": "üíæ Lectorium :: Data",
      "path": "./data"
    },
    {
      "name": "üíæ Lectorium :: GitHub",
      "path": "./.github"
    },
    {
      "name": "üëë Apps :: Admin",
      "path": "./modules/apps/admin"
    },
    {
      "name": "üì± Apps :: Mobile",
      "path": "./modules/apps/mobile"
    },
    {
      "name": "üëã Apps :: Landing",
      "path": "./modules/apps/landing"
    },
    {
      "name": "üìÄ Libraries :: DAL",
      "path": "./modules/libs/dal"
    },
    {
      "name": "üìÄ Libraries :: Protocol",
      "path": "./modules/libs/protocol"
    },
    {
      "name": "üìÄ Libraries :: Downloader",
      "path": "./modules/libs/downloader"
    },
    {
      "name": "üõú Services :: API",
      "path": "./modules/services/api"
    },
    {
      "name": "üí® Services :: Airflow",
      "path": "./modules/services/airflow"
    },
    {
      "name": "üö™ Services :: Gateway",
      "path": "./modules/services/gateway"
    },
    {
      "name": "üíæ Services :: CouchDB",
      "path": "./modules/services/couchdb"
    },
    {
      "name": "üìú Misc :: Scripts",
      "path": "./scripts"
    },
    {
      "name": "üìñ Docs",
      "path": "./docs"
    }
  ],
  "tasks": {
    "version": "2.0.0",
    "tasks": [
      {
        "label": "üë∑ Downloader Plugin :: Build",
        "detail": "Build the downloader plugin",
        "command": "npm",
        "type": "shell",
        "args": [
          "run",
          "build"
        ],
        "presentation": {
          "reveal": "always"
        },
        "problemMatcher": [
          {
            "owner": "typescript",
            "fileLocation": [
              "relative",
              "${workspaceFolder}"
            ],
            "pattern": {
              "regexp": "^\\s*([a-zA-Z0-9_\\-\\.]+)\\((\\d+)\\)\\s*:\\s*(.*)$",
              "file": 1,
              "line": 2,
              "message": 3
            }
          }
        ],
        "group": "build",
        "isBackground": false,
        "options": {
          "cwd": "/workspaces/lectorium/modules/libs/downloader"
        }
      },
      {
        "label": "üë∑ Mobile :: Build",
        "detail": "Build the mobile app",
        "command": "npm",
        "type": "shell",
        "args": [
          "run",
          "build+sync"
        ],
        "presentation": {
          "reveal": "always"
        },
        "problemMatcher": [
          {
            "owner": "typescript",
            "fileLocation": [
              "relative",
              "${workspaceFolder}"
            ],
            "pattern": {
              "regexp": "^\\s*([a-zA-Z0-9_\\-\\.]+)\\((\\d+)\\)\\s*:\\s*(.*)$",
              "file": 1,
              "line": 2,
              "message": 3
            }
          }
        ],
        "group": "build",
        "isBackground": false,
        "options": {
          "cwd": "/workspaces/lectorium/modules/apps/mobile"
        }
      },
      {
        "label": "üöÄ Gateway :: Run",
        "detail": "Run Gateway service",
        "command": "nginx",
        "type": "shell",
        "args": [
          "-c",
          "/workspaces/lectorium/modules/services/gateway/nginx.conf",
          "-g",
          "'daemon off;'"
        ],
        "presentation": {
          "reveal": "always"
        },
        "problemMatcher": [],
        "group": "none",
        "isBackground": true,
        "options": {
          "cwd": "/workspaces/lectorium/modules/services/gateway"
        }
      },
      {
        "label": "üöÄ Postgres :: Run",
        "detail": "Run the database",
        "command": "sudo service postgresql start",
        "type": "shell",
        "args": [],
        "problemMatcher": [],
        "presentation": {
          "reveal": "always"
        },
        "group": "none",
        "isBackground": true
      },
      {
        "label": "üöÄ Run All",
        "dependsOn": [
          "üöÄ Postgres :: Run",
          "üöÄ Airflow :: Run",
          "üöÄ Gateway :: Run"
        ],
        "dependsOrder": "parallel"
      }
    ]
  },
  "launch": {
    "version": "0.2.0",
    "configurations": [
      {
        "name": "‚öôÔ∏è Services :: Api",
        "request": "launch",
        "runtimeArgs": [
          "run-script",
          "start:debug"
        ],
        "runtimeExecutable": "npm",
        "skipFiles": [
          "<node_internals>/**"
        ],
        "type": "node",
        "console": "integratedTerminal",
        "cwd": "/workspaces/lectorium/modules/services/api",
        "presentation": {
          "hidden": false,
          "group": "Services",
          "order": 1
        },
      },
    ],
    "compounds": []
  },
  "settings": {
    /* -------------------------------------------------------------------------- */
    /*                                   Remote                                   */
    /* -------------------------------------------------------------------------- */
    "remote.localPortHost": "allInterfaces",
    
    /* -------------------------------------------------------------------------- */
    /*                                   editor                                   */
    /* -------------------------------------------------------------------------- */
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false,
    "editor.codeActionsOnSave": {
      "source.fixAll": "explicit"
    },
    /* -------------------------------------------------------------------------- */
    /*                                   linter                                   */
    /* -------------------------------------------------------------------------- */
    "eslint.validate": [
      "javascript",
      "typescript",
      "vue"
    ],
    /* -------------------------------------------------------------------------- */
    /*                                    tests                                   */
    /* -------------------------------------------------------------------------- */
    "jest.enable": false,
    "jest.jestCommandLine": "npx jest",
    "jest.runMode": "on-demand",
    "jestrunner.jestCommand": "npx jest",
    /* -------------------------------------------------------------------------- */
    /*                                    Volar                                   */
    /* -------------------------------------------------------------------------- */
    "volar.takeOverMode.enabled": true,
    "vue.language-server.runtime": "node",
    /* -------------------------------------------------------------------------- */
    /*                                 file types                                 */
    /* -------------------------------------------------------------------------- */
    "[feature]": {
      "editor.formatOnType": true,
      "editor.formatOnSave": true,
    },
    "typescript.preferences.autoImportFileExcludePatterns": [
      "**/dist/**",
    ],
    /* -------------------------------------------------------------------------- */
    /*                                   github                                   */
    /* -------------------------------------------------------------------------- */
    "githubIssues.issueBranchTitle": "${user}/issue-${issueNumber}-${sanitizedIssueTitle}",
    /* -------------------------------------------------------------------------- */
    /*                                   search                                   */
    /* -------------------------------------------------------------------------- */
    "search.exclude": {
      "**/dist/**": true,
      "data/**": true,
      "**/node_modules/**": true,
      "**/.vite/**": true,
      "**/.git/**": true,
      "**/__pycache__/**": true,
      "**/.airflow/**": true,
      "**/.pytest_cache/**": true,
      "**/.pytest/**": true,
      "**/logs/**": true,
    },
    "files.exclude": {
      "**/.git": true,
      "**/.DS_Store": true,
      "**/Thumbs.db": true,
      "**/dist": true,
      "**/node_modules": true,
      "**/.vite": true,
    },
    "files.watcherExclude": {
      "**/.git/objects/**": true,
      "**/.git/subtree-cache/**": true,
      "**/.hg/store/**": true,
      "**/dist/**": true,
      "**/node_modules/**": true,
      "**/.vite": true,
    },
  },
}
