name: Mobile

on:
  push:
    paths:
      - "modules/apps/mobile/**"
      - "modules/libs/downloader/**"
      - "modules/libs/audioPlayer/**"
      - "modules/package.json"
      - "modules/package-lock.json"
      - ".github/workflows/mobile-build-deploy-staging.yml"


env:
  REGISTRY: ghcr.io
  ORGANIZATION: akdasa-studios

jobs:

  prepare:
    name: 🛠️ Prepare
    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ steps.release_version.outputs.tag }}
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
          fetch-tags: true

      - name: 🏷️ Get Release Version
        id: release_version
        run: |
          echo "tag=$(git describe --tags $(git rev-list --tags --max-count=1) | sed 's/^v//')" >> $GITHUB_OUTPUT

  setup:
    name: 🧰 Setup Environment
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
          fetch-tags: true

      - name: 💾 Install Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: 🤖 Install Android SDK
        uses: android-actions/setup-android@v2

      - name: 📝 Accept Android SDK licenses
        run: yes | sdkmanager --licenses

      - name: 🧰 Install Android SDK packages
        run: sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      - name: 🧰 Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: 'modules/package-lock.json'

      - name: 📦 Install Node Dependencies
        working-directory: modules
        run: npm ci

      - name: 📦 Install Script Dependencies
        working-directory: scripts
        run: pip3 install -r requirements.txt

  build-plugins:
    name: 🧩 Build Plugins
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
          fetch-tags: true

      - name: 👷 Build Downloader Plugin
        working-directory: modules/libs/downloader
        run: npm i && npm run build

      - name: 👷 Build Audio Player Plugin
        working-directory: modules/libs/audioPlayer
        run: npm i && npm run build

  download-artifacts:
    name: 📥 Download Database Artifacts
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📥 Download Artifacts
        env:
          BUCKET_ACCESS_KEY_ID: ${{ secrets.BUCKET_ACCESS_KEY_ID }}
          BUCKET_SECRET_ACCESS_KEY: ${{ secrets.BUCKET_SECRET_ACCESS_KEY }}
          BUCKET_ENDPOINT_URL: ${{ secrets.BUCKET_ENDPOINT_URL }}
          BUCKET_REGION_NAME: ${{ secrets.BUCKET_REGION_NAME }}
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        run: python3 scripts/download-app-database-artifacts.py

  update-env:
    name: 🌍 Update Environment
    runs-on: ubuntu-latest
    needs: [prepare, setup, download-artifacts]
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🌎 Update Env Variables
        env:
          RELEASE: ${{ needs.prepare.outputs.release_version }}
          DIST: ${{ github.sha }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          API_URL: ${{ secrets.API_URL }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        run: python3 scripts/update-envs.py

  build-app:
    name: 📱 Build Mobile App
    runs-on: ubuntu-latest
    needs: [build-plugins, update-env]
    environment: staging
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 👷 Build Ionic App
        working-directory: modules/apps/mobile
        run: npm i && npm run build+sync

      - name: 🧮 Update Android Version
        env:
          VERSION: ${{ needs.prepare.outputs.release_version }}
          BUILD_ID: ${{ github.run_number }}
        working-directory: modules/apps/mobile/android
        run: npx trapeze run configuration.yml -y --android

      - name: 👷 Build Android App (AAB)
        working-directory: modules/apps/mobile/android
        run: |
          npx cap build android \
          --keystorepath ../../../../data/keys/apk/mobile.jks \
          --keystorepass ${{ secrets.ANDROID_KEYSTORE_PASSWORD }} \
          --keystorealias ${{ secrets.ANDROID_KEYSTORE_ALIAS }} \
          --keystorealiaspass ${{ secrets.ANDROID_KEYSTORE_ALIAS_PASSWORD }} \
          --androidreleasetype AAB

  upload:
    name: 📤 Upload Build Artifacts
    runs-on: ubuntu-latest
    needs: build-app
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📤 Upload to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.BUCKET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BUCKET_SECRET_ACCESS_KEY }}
          AWS_S3_ENDPOINT: ${{ secrets.BUCKET_ENDPOINT_URL }}
          AWS_REGION: ${{ secrets.BUCKET_REGION_NAME }}
          SOURCE_DIR: modules/apps/mobile/android/app/build/outputs/bundle/release
          DEST_DIR: artifacts/mobile-app/${{ needs.prepare.outputs.release_version }}

